import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_boston

data = load_boston()
print(data.DESCR)

dataset = data.data
for name, index in enumerate(data.feature_names):
  print(index, name)

ds = dataset[:, 12].reshape(-1, 1)

np.shape(dataset)

target = data.target.reshape(-1, 1)
np.shape(target)

plt.figure(figsize=(10, 8), facecolor = 'w')
plt.scatter(ds, target, color = 'green')
plt.xlabel('Lower income population')
plt.ylabel('Cost of House')
plt.show()

from sklearn.linear_model import LinearRegression as LR
from sklearn.linear_model import Lasso
from sklearn.linear_model import Ridge

from sklearn.metrics import mean_squared_error as mse
from sklearn.metrics import r2_score as rs

reg = LR()

reg.fit(ds, target)

test_predict = reg.predict(ds)

k1 = mse(test_predict, target)

print("Mean Squared Error: ", k1)

k2 = rs(test_predict, target)

print("R Squared Error: ", k2)

plt.figure(figsize=(10, 8), facecolor = 'w')
plt.scatter(ds, target, color = 'green')
plt.plot(ds, test_predict, color = 'red')
plt.xlabel('Lower income population', fontsize = 16)
plt.ylabel('Cost of House', fontsize = 16)
plt.title('Regression Line', fontsize = 16)
plt.show()

# Polynomial Regression

from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline

model = make_pipeline(PolynomialFeatures(7), reg)

model.fit(ds, target)

model_predict = model.predict(ds)

k1 = mse(model_predict, target)

print("Mean Squared Error: ", k1)

k2 = rs(model_predict, target)

print("R Squared Error: ", k2)

plt.figure(figsize=(10, 8), facecolor = 'w')
plt.scatter(ds, target, color = 'green')
plt.plot(ds, model_predict, color = 'red')
plt.xlabel('Lower income population', fontsize = 16)
plt.ylabel('Cost of House', fontsize = 16)
plt.title('Polynomial Regression Line', fontsize = 16)
plt.show()
